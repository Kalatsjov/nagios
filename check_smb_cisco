#!/usr/bin/php
<?php

/**
 * @author Eugene Kalatsjov
 * @copyright 2016
 * @version 1
 */

snmp_set_quick_print(true);
snmp_set_valueretrieval(SNMP_VALUE_PLAIN);

class Cisco {

private $mode = 1;
private $ip;
private $community;
private $model;
private $swVersion;
private $uptime;
private $perfData = array();
private $alerts = array(); 

    
    function __construct(){
        $args = $this->parseArgs($_SERVER['argv']);
        if(empty($args['arguments']['H'])||empty($args['arguments']['c'])){
            $this->printHelp();
            exit();
        }
        $this->ip = $args['arguments']['H'];
        $this->community = $args['arguments']['c'];
        try{
            $this->checkUnit();
        }catch (Exception $e){
            echo 'UNKNOWN - No or Invalid response'."\n";
        }
        $this->printOutput();
    }
    
    private function parseArgs($args){
        $ret = array(
            'exec'      => '',
            'arguments' => array(),
        );
        $ret['exec'] = array_shift( $args );
        $flag = NULL;
        while (($arg = array_shift($args)) != NULL) {
            if ( substr( $arg, 0, 1 ) === '-' ) {
                for ($i = 1; isset($arg[$i]) ; $i++)
                    $flag = $arg[$i];
                continue;
            }  
            if($flag!=NULL){    
                $ret['arguments'][$flag] = $arg;
                $flag = NULL;
            }else{
                $ret['arguments'][] = $arg;
            }
            continue;
        }
        return $ret;
    }
    
    private function checkUnit(){
        if(!$this->model = @snmpget($this->ip, $this->community, '1.3.6.1.2.1.47.1.1.1.1.7.67108992')){
            throw new Exception('No Response.');
        }
        if(!preg_match('/(22.)/i', $this->model)){
            $this->getCPUStats();
        }
        if(preg_match('/(S.*P)/i', $this->model)){
            $this->getPOEStats();
        }
        $this->swVersion = @snmpget($this->ip, $this->community, 'iso.3.6.1.2.1.47.1.1.1.1.10.67108992');
        $this->uptime = $this->secondsToTime( @snmpget($this->ip, $this->community, '1.3.6.1.2.1.1.3.0'));
        
    }
    //For Models 200/300/500 Only
    private function getCPUStats(){
        $this->perfData['cpu_load_5s'] = @snmpget($this->ip, $this->community, '1.3.6.1.4.1.9.6.1.101.1.7.0');
        $this->perfData['cpu_load_1m'] = @snmpget($this->ip, $this->community, '1.3.6.1.4.1.9.6.1.101.1.8.0');
        $this->perfData['cpu_load5m'] = @snmpget($this->ip, $this->community, '1.3.6.1.4.1.9.6.1.101.1.9.0');
        if($this->perfData['cpu_load5m'] >= 90)
            $alerts[] = 'High CPU utilization: '.$this->perfData['cpu_load5m'].'%';
    }
    //For POE models only
    private function getPOEStats(){
        $this->perfData['poe_max'] = @snmpget($this->ip, $this->community, '1.3.6.1.2.1.105.1.3.1.1.2.1');
        $this->perfData['poe_in_use'] = @snmpget($this->ip, $this->community, '1.3.6.1.2.1.105.1.3.1.1.4.1');
        $usage = intval($this->perfData['poe_in_use'])/intval($this->perfData['poe_max']) * 100;
        if($usage >= 90)
            $alerts[] = 'High POE usage: '.$usage.'%';
    }
    
    private function secondsToTime($seconds) {
        $seconds = round(intval($seconds)/100);
        $dtF = new \DateTime('@0');
        $dtT = new \DateTime("@$seconds");
        return $dtF->diff($dtT)->format('%a days, %h hours, %i minutes and %s seconds');
    }
    
    private function printHelp()
    {
        print "Usage: check_smb_cisco -H host -c community\n";
        print "Options:\n";
        print " -H --host STRING or IPADDRESS\n";
        print " -c --community STRING\n";
        exit();
    }
    
    private function printOutput(){
        $perf = (count($this->perfData) > 0) ? '| ' : '';
        foreach($this->perfData as $key=>$value){
            $perf .= $key.'='.$value.', ';
        }
        $perf = rtrim($perf, ', ');
        if(empty($alerts)){
            echo 'OK - Operational Model: '.$this->model.' Software: '.$this->swVersion.' Uptime: '.$this->uptime.' '.$perf."\n";
        }else{
            echo 'WARNING - '.implode(', ',$alerts).' Model: '.$this->model.' Software: '.$this->swVersion.' Uptime: '.$this->uptime.' '.$perf."\n";
        }
    }
    
    
}

new Cisco();